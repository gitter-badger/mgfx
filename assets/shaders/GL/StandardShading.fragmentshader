#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 Position_worldspace;
in vec3 Normal_cameraspace;
in vec3 EyeDirection_cameraspace;
in vec3 LightDirection_cameraspace;

// Ouput data
out vec3 color;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform mat4 MV;
uniform vec3 LightPosition_worldspace;

vec3 Sky( vec3 ray )
{
	return mix( vec3(.8), vec3(0), exp2(-(1.0/max(ray.y,.01))*vec3(.4,.6,1.0)) );
}

void main()
{
    vec3 diffuse = texture( myTextureSampler, UV *vec2(1.0f, -1.0f)).rgb;
    
    vec3 ray = reflect(normalize(EyeDirection_cameraspace), normalize(Normal_cameraspace) );
    vec3 sky = Sky(ray);

    color = diffuse * sky.b;

} 